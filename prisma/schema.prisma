// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  password  String?
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}

enum PaymentStatus {
  NOT_PAID
  PENDING
  PAID
}

enum Gender {
  MALE
  FEMALE
  UNSPECIFIED
}

model Outreach {
  id          String    @id @default(cuid())
  theme       String
  description String?
  location    String?
  date        String?
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  Payment     Payment[]
  BankDetail  BankDetail[]
}

model BankDetail {
  id     String  @id @default(cuid())
  name   String
  bank   String
  isPublic   Boolean?   @default(true)
  outreachId    String?
  outreach      Outreach?     @relation(fields: [outreachId], references: [id])
  acctNo String? @unique
  Payment     Payment[]
}

model Payment {
  id            String        @id @default(cuid())
  name          String?
  paymentStatus PaymentStatus @default(NOT_PAID)
  gender        Gender        @default(UNSPECIFIED)
  crew          String?       @default("nocrew")
  email         String?      
  phone         String?       
  paidAmount    Float?        @default(0.0)
  proof_image   String?
  outreachId    String?
  outreach      Outreach?     @relation(fields: [outreachId], references: [id])
  bankId        String?
  bank          BankDetail?     @relation(fields: [bankId], references: [id])
  createdAt     DateTime      @default(now()) @map(name: "created_at")
  updatedAt     DateTime      @updatedAt @map(name: "updated_at")

  @@map(name: "payments")
}
